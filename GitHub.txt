GitHub
git init-> for local repository 
git status -> for checking status 
git add filename ->for adding file and also for adding in staging after staging process we can commit every time before commit we have to add the file  
git commit -m "here you can pass message"-> these for commit 
git log -> check all the commit done by devlopers/people 
git diff -> it will show all the changes made 
git rm  --cached filename -> for removing file which name we are given here
cat -> is use for command or open the file 
git branch -M main -> for getting the main branch
cd .filename-> is  use for change directory i mean for enter the folder 
pwd -> present working directory
mkdir-> for creating folder 
cat filename-> to see content in that file 
ssh-keygen -o -> this key is use for connect the local repository to remote repository
cat id_rsa.pub -> for get the key now copy the key and go to GitHub setting and click on new ssh key and paste there this key now local and remote is connected 
git push origin main-> first we track the file and commit on local machine and then push on remote git
git remote -v ->for checking how many are remote and local user 
git tag -> how many tags you given
git tag -a v(version_no(like 1.0,1.1)) -m "message"-> it is for giving the tag
git checkout -b branchname -> for creating branch
git switch main -> for switching branch
git branch -> to check in which branch you are present
git checkout -d branchname -> for deleting branch
git push origin branchname -> for pushing branch from local to remote 
git merge branchname -> for these we have to first switch to main branch and we should pull before merge
git pull origin main->
git rebase branchname-> optimize or better way of merging
git clone ssh-id -> project will come to your ide whose ssh-id you have written


git branch
git checkout -b main
git add .
git commit -m "Initial commit"
git push -u origin main   // this is for https keys 



git init -> to inside the file nad make git repository of that file
git add . -> to add all the file in repository present in that file instead of . we can also use file name
git commit -m "" -> to staged the file means add in git history and modified the changes 
git push -u origin main
git restore --staged filename -> if staged any file and wants to make unStage we can use these command  
git log -> entire history of project 
rm -rf names.txt -> for deleting file
git reset #id -> lets if you want to go any particular history of commit we can go using #id 
git stash->
git stash pop->
git stash clear ->
git remote add origin urlOfGithubRepository ->
don't commit on main branch, commit on main branch only when your file or the things that your working is fully right and completed.
git branch branchName ->
git checkout branchName-> now i can make changes in these branch that means head will come on these branch and after finalinzing can merge to main branch 
git merge branchName -> now we are part of main branch
git push origin main -> for pushing file to particular branch
if you want to make changes in someone else project we cannot do it but we can make changes by forking(copying) to your account and make changes according to you 
from where you have forked these project url by default it's called upstream url
git remote add upstream URL -> 
we have to make changes in the main project like from the where you have forked the project 
